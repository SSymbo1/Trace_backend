package edu.hrbu.trace_backend.entity.enums;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.ToString;

@Getter
@ToString
@AllArgsConstructor
// 通讯消息枚举
public enum Message {

    GET_TRACE_QR_SUCCESS("请求追溯二维码成功!"),
    GET_ENTRANCE_SUCCESS("查询超市出场成功!"),
    GET_APPROACH_SUCCESS("查询超市进场成功!"),
    ENTRANCE_SUCCESS("超市出场导入成功!"),
    APPROACH_SUCCESS("超市进场导入成功!"),
    PROCESS_APPROVE("已经审批!"),
    PROCESS_REJECT("审批被拒!"),
    EDIT_PRODUCT_SUCCESS("修改产品信息成功!"),
    EDIT_PRODUCT_FAIL("修改产品信息失败!"),
    GET_PRODUCT_EDIT_DATA("获取指定产品信息成功!"),
    ADD_PRODUCT_SUCCESS("添加商品备案成功!"),
    ADD_PRODUCT_FAIL("添加商品备案失败!"),
    GET_PRODUCT_SUCCESS("获取产品备案信息成功!"),
    BATCH_IMPORT_PRODUCT("批量导入产品备案信息成功!"),
    GET_VENDORS_SUCCESS("查询供销商信息成功!"),
    GET_SUPPLIER_SUCCESS("查询供应商信息成功!"),
    CANNOT_ENABLE_ALL_ACCOUNT("启用所用账户失败,存在绑定角色被禁用的账户!"),
    DISABLE_ALL_ROLE("已禁用所有角色!"),
    ENABLE_ALL_ROLE("已启用所有角色!"),
    EDIT_ROLE_SUCCESS("编辑角色成功!"),
    EDIT_ROLE_FAIL("编辑角色失败!"),
    ROLE_EXIST("所更改的角色已存在!"),
    GET_ROLE_EDIT_DATA("获取指定角色信息成功!"),
    CANNOT_EDIT_BAN_ROLE_ACCOUNT("该账号所绑定的角色被禁用,请绑定为其他角色!"),
    CANNOT_SET_BAN_ROLE_ACCOUNT("该账号所绑定的角色被禁用,无法启用该账户!"),
    SET_ROLE_STATUE_SUCCESS("设置角色状态成功!"),
    SET_ROLE_STATUE_FAIL("设置角色状态失败!"),
    GET_ROLE_OPERATE_SUCCESS("查询角色敏感操作记录成功!"),
    ADD_ROLE_FAIL("添加角色失败!"),
    ADD_ROLE_SUCCESS("添加角色成功!"),
    ADD_ROLE_EXIST("所添加的角色已存在!"),
    GET_TREE_ROLE_MENUE("查询功能目录成功!"),
    GET_TREE_CLASSIFICATION_MENUE("查询分类目录成功!"),
    GET_ROLE_SUCCESS("查询角色信息成功!"),
    DISABLE_ALL_ACCOUNT("已禁用所有账户!"),
    ENABLE_ALL_ACCOUNT("已启用所有账户!"),
    EDIT_ENTERPRISE_FAIL("编辑企业信息失败!"),
    EDIT_ENTERPRISE_SUCCESS("编辑企业信息成功!"),
    GET_ENTERPRISE_EDIT_DATA("获取指定企业信息成功!"),
    GET_ENTERPRISE_OPERATE_SUCCESS("查询企业敏感操作记录成功!"),
    ADD_ENTERPRISE_SUCCESS("创建企业成功!"),
    ADD_ENTERPRISE_FAIL("创建企业失败!"),
    ADD_ENTERPRISE_EXIST("所添加的企业已存在!"),
    GET_ENTERPRISE_SUCCESS("查询公司信息成功!"),
    GET_ACCOUNT_OPERATE_SUCCESS("查询账户敏感操作记录成功!"),
    EDIT_ACCOUNT_SUCCESS("修改账户成功!"),
    EDIT_ACCOUNT_FAIL("修改账户失败!"),
    GET_ACCOUNT_EDIT_DATA("获取指定账户信息成功"),
    SET_ACCOUNT_STATUE_SUCCESS("设置账户状态成功"),
    SET_ACCOUNT_STATUE_FAIL("设置账户状态失败"),
    ADD_ACCOUNT_SUCCESS("添加账户成功!"),
    ADD_ACCOUNT_FAIL("添加账户失败!"),
    ACCOUNT_USER_EXIST("所注册的用户名存在!"),
    TABLE_WRONG("上传电子表格失败!"),
    DECODE_WRONG("AES解码失败!"),
    DECODED("已解码!"),
    NO_PERMISSION("没有足够的权限!"),
    TIMESTAMP_TIMEOUT("请求超时!"),
    GET_ENTERPRISE_SUB_SUCCESS("查询公司子菜单成功"),
    GET_ROLE_SUB_SUCCESS("查询角色子菜单成功!"),
    GET_LOGIN_ACCOUNT_INFO_SUCCESS("查询当前登录用户信息成功!"),
    GET_ACCOUNT_INFO_SUCCESS("查询用户信息成功"),
    SAVE_SUCCESS("保存成功"),
    SAVE_ERROR("保存失败"),
    GET_MONITOR_MENUE_SUCCESS("获取运行监测管理菜单成功!"),
    GET_SEGMENT_MENUE_SUCCESS("获取追溯环节管理菜单成功!"),
    GET_ANALYSIS_MENUE_SUCCESS("获取追溯数据分析菜单成功!"),
    GET_SUBJECT_MENUE_SUCCESS("获取追溯主体管理菜单成功!"),
    SERVER_ERROR("出现未知错误!"),
    SERVER_IO_ERROR("服务器读写操作错误!"),
    LOGIN_ERROR("登录失效，请重新登录!"),
    EXPIRE_TOKEN("token已过期!"),
    WRONG_TOKEN("不合法的token!"),
    GET_HOME_MENUE_SUCCESS("获取主界面菜单成功!"),
    GET_CAPTCHA_SUCCESS("获取验证码成功!"),
    WRONG_CAPTCHA("验证码错误!"),
    ABSENT_USER("用户不存在!"),
    GENERATE_QR("生成二维码"),
    WRONG_USERNAME_OR_PASSWORD("用户名或密码错误!"),
    ACCOUNT_DISABLE("该账号已被暂停使用，详情请联系管理员!"),
    ACCOUNT_DELETE("该账号已被删除，详情请联系管理员!"),
    LOGIN_SUCCESS("登录成功，欢迎:");

    private final String value;

}
